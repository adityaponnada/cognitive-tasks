/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUIPages;

import java.util.Timer;
import java.util.TimerTask;

/**
 *
 * @author catalinacumpanasoiu1
 */
public class RelaxPage extends javax.swing.JFrame {

    
    int secondsLeft = 5;
    public Timer timer;
    public TimerTask timerTask;
    
    /**
     * Creates new form RelaxPage
     */
    public RelaxPage() {
        initComponents();
        startTaskTimer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(1900, 900));

        jLabel1.setForeground(new java.awt.Color(0, 102, 153));
        jLabel1.setText("For the next 3 minutes, please relax.");

        jLabel2.setForeground(new java.awt.Color(0, 102, 153));
        jLabel2.setText("You can do whatever you want, but please refrain from using your phone.");

        jLabel3.setForeground(new java.awt.Color(0, 102, 153));
        jLabel3.setText("At the end of this period, you will be given further instructions.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(450, 450, 450)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(450, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(265, 265, 265)
                .addComponent(jLabel1)
                .addGap(6, 6, 6)
                .addComponent(jLabel2)
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addContainerGap(270, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelaxPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelaxPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelaxPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelaxPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelaxPage().setVisible(true);
            }
        });
    }

    private void startTaskTimer() {
        System.out.println("Timer task started");

        timer = new Timer();
        timerTask = new TimerTask() {
            public void run() {
                secondsLeft--;
                System.out.println("Before checking timer: " + String.valueOf(secondsLeft));
                if (secondsLeft <= 0) {
                    System.out.println("PHASE in Relax is: " + Constants.PHASE);
                    // code below to be doen when relax ends
                    if (Constants.PHASE=="first"){
                        if(Constants.CONDITION=="A" || Constants.CONDITION == "B"){
                            StressOneInstructions stressOneInstr = new StressOneInstructions();
                            stressOneInstr.setVisible(true);
                            disposePage();
                            //this.dispose();
                        } else{
                            StressTwoInstructions stressTwoInstr = new StressTwoInstructions();
                            stressTwoInstr.setVisible(true);
                            disposePage();
                            //this.dispose();
                        }
                    }
                    else if (Constants.PHASE=="second"){
                        if(Constants.CONDITION=="A" || Constants.CONDITION == "B"){
                            StressTwoInstructions stressTwoInstr = new StressTwoInstructions();
                            stressTwoInstr.setVisible(true);
                            disposePage();
                            //this.dispose();
                        } else{
                            StressOneInstructions stressOneInstr = new StressOneInstructions();
                            stressOneInstr.setVisible(true);
                            disposePage();
                            //this.dispose();
                        }
                    }
                    
                    System.out.println("Before timer cancel: " + String.valueOf(secondsLeft));
                    timer.cancel();
                    System.out.println("Timer cancelled");
 
                } else {
                    //set text for timer here
                    System.out.println("After checking timer: " + String.valueOf(secondsLeft));        
                }

            }
        };
        timer.scheduleAtFixedRate(timerTask, 1000, 1000);
    }
    
    private void disposePage(){
    this.dispose();
    
    }

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables
}
